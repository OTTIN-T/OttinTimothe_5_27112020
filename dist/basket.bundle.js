/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/*!**********************!*\
  !*** ./js/basket.js ***!
  \**********************/
eval("//Page products\n//On initialise nos variables\nvar products;\nvar productsTableInfo;\nvar totalPrice = 0;\nvar productsTotalSub = []; //On initialise un tableau vide de chaque élément\n\nvar productsTotalQuant = [];\nvar productsTotalName = [];\nvar productsTotalId = [];\nvar $productsTableBody = document.querySelector('#products-tablebody'); //On récupère notre storage en json\n\nvar storage = localStorage.getItem(\"orinocoCamera\"); //On extrait chaque ligne du tableau \n\nvar tableRow = function tableRow() {\n  for (var i = 0; i < products.length; i++) {\n    productsTableInfo = products[i]; //Récupère pour un élément du panier ses infos sous forme d'objet\n  }\n}; //Fonction pour créer une ligne du tableau\n\n\nvar productsTable = function productsTable() {\n  //Crée la ligne tr de chaque élement\n  var myTr = document.createElement('tr'); //Donne un id\n\n  myTr.id = 'parent-price';\n  console.log(\"myTr\", myTr); //Inclus myTr dans mon tableau ($productsTableBody)\n\n  $productsTableBody.appendChild(myTr); //Crée la ligne td nom \n\n  var myTd = document.createElement('td'); //Donne une classe\n\n  myTd.className = 'text-center'; //Rajoute le contenu\n\n  myTd.textContent = \"\".concat(productsTableInfo.name, \"  \").concat(productsTableInfo.lenses);\n  console.log(\"myTd\", myTd); //Inclus myTd dans myTr\n\n  myTr.appendChild(myTd); //Crée la ligne td quantité \n\n  myTd = document.createElement('td');\n  myTd.className = 'text-center';\n  console.log(\"myTd2\", myTd);\n  myTr.appendChild(myTd); //Créé le bouton -\n\n  var myButton = document.createElement('button');\n  myButton.className = 'btn mx-auto quantity-reduce'; //Donne un type\n\n  myButton.type = 'button'; //Donne un attribut\n\n  myButton.setAttribute('onclick', 'buttonBasketReduce()');\n  myButton.textContent = '-';\n  console.log(\"myButton\", myButton);\n  myTd.appendChild(myButton); //Créé la span quantité\n\n  var mySpan = document.createElement('span');\n  mySpan.className = 'quantity-product';\n  mySpan.textContent = \"\".concat(productsTableInfo.quantity);\n  myTd.appendChild(mySpan); //Créé le bouton +\n\n  myButton = document.createElement('button');\n  myButton.className = 'btn mx-auto quantity-plus';\n  myButton.type = 'button';\n  myButton.setAttribute('onclick', 'buttonBasketPlus()');\n  myButton.textContent = '+';\n  console.log(\"myButton\", myButton);\n  myTd.appendChild(myButton); //Crée la ligne td du prix\n\n  myTd = document.createElement('td');\n  myTd.id = 'price-table';\n  myTd.className = 'text-center';\n  myTd.textContent = \"\".concat(productsTableInfo.price + ' €');\n  console.log(\"myTd\", myTd);\n  myTr.appendChild(myTd);\n  /* <tbody id=\"products-tablebody\">\r\n       <tr id=\"parent-price\">\r\n            <td class=\"text-center\">${productsTableInfo.name}  ${productsTableInfo.lenses}</td>\r\n            <td class=\"text-center\">\r\n                 <button type=\"button\" onclick=\"buttonBasketReduce()\" class=\"btn mx-auto quantity-reduce\">-</button>\r\n                      <span class=\"quantity-product\">${productsTableInfo.quantity}</span>\r\n                 <button type=\"button\" onclick=\"buttonBasketPlus()\" class=\"btn mx-auto quantity-plus\">+</button>\r\n            </td> \r\n            <td id=\"price-table\" class=\"text-center\">${productsTableInfo.price + ' €'}</td>\r\n       </tr>\r\n  </tbody> */\n  // $productsTableBody.innerHTML += (`\n  // <tr id=\"parent-price\">\n  //      <td class=\"text-center\">${productsTableInfo.name}  ${productsTableInfo.lenses}</td>\n  //      <td class=\"text-center\">\n  //           <button type=\"button\" onclick=\"buttonBasketReduce()\" class=\"btn mx-auto quantity-reduce\">-</button>\n  //                <span class=\"quantity-product\">${productsTableInfo.quantity}</span>\n  //           <button type=\"button\" onclick=\"buttonBasketPlus()\" class=\"btn mx-auto quantity-plus\">+</button>\n  //      </td> \n  //      <td id=\"price-table\" class=\"text-center\">${productsTableInfo.price + ' €'}</td>\n  // </tr>`)\n  // buttonBasket()\n}; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Ne marche que pour la première ligne\n//Fonction  pour les boutons + et -\n// const buttonBasket = () => {\n//      const $quantityReduce = document.querySelector('.quantity-reduce')\n//      $quantityReduce.addEventListener('click', (event) => {\n//           let $quantityProduct = document.querySelector('.quantity-product')\n//           $quantityProduct.innerHTML = --productsTableInfo.quantity //la quantité décrémente à chaque click\n//           const $priceTable = document.querySelector('#price-table')\n//           const priceTableTotal = productsTableInfo.priceByItems * productsTableInfo.quantity\n//           $priceTable.innerHTML = (`${priceTableTotal} €`) //On recalcul le prix en fonction de la quantité    \n//           event.preventDefault()\n//           event.stopPropagation()\n//      })\n//      const $quantityPlus = document.querySelector('.quantity-plus')\n//      $quantityPlus.addEventListener('click', (event) => {\n//           let $quantityProduct = document.querySelector('.quantity-product')\n//           $quantityProduct.innerHTML = ++productsTableInfo.quantity //la quantité décrémente à chaque click\n//           const $priceTable = document.querySelector('#price-table')\n//           const priceTableTotal = productsTableInfo.priceByItems * productsTableInfo.quantity\n//           $priceTable.innerHTML = (`${priceTableTotal} €`) //On recalcul le prix en fonction de la quantité    \n//           event.preventDefault()\n//           event.stopPropagation()\n//      })\n// }\n\n\nvar buttonBasketReduce = function buttonBasketReduce() {\n  var $quantityProduct = document.querySelector('.quantity-product');\n  $quantityProduct.innerHTML = --productsTableInfo.quantity; //la quantité décrémente à chaque click\n\n  var $priceTable = document.querySelector('#price-table');\n  var priceTableTotal = productsTableInfo.priceByItems * productsTableInfo.quantity;\n  $priceTable.innerHTML = priceTableTotal; //On recalcul le prix en fonction de la quantité     \n  // const $quantityReduce = document.querySelector('.quantity-reduce')\n  // event.preventDefault()\n  // event.stopPropagation()\n  // totalPrice = (productsTableInfo.price - priceTableTotal)//On modifie le total du panier \n  // const $productsCalcul = document.querySelector('#sub-total')\n  // $productsCalcul.innerHTML = totalPrice\n};\n\nvar buttonBasketPlus = function buttonBasketPlus() {\n  var $quantityProduct = document.querySelector('.quantity-product');\n  $quantityProduct.innerHTML = ++productsTableInfo.quantity; //La quantité s'incrémente à chaque click\n\n  var $priceTable = document.querySelector('#price-table');\n  var priceTableTotal = productsTableInfo.priceByItems * productsTableInfo.quantity;\n  $priceTable.innerHTML = priceTableTotal; //On recalcul le prix en fonction de la quantité     \n  // const $quantityPlus = document.querySelector('.quantity-plus')\n  // event.preventDefault()\n  // event.stopPropagation()\n  // totalPrice = (productsTableInfo.price + priceTableTotal)//On modifie le total du panier\n  // const $productsCalcul = document.querySelector('#sub-total')\n  // $productsCalcul.innerHTML = totalPrice\n}; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//Fonction pour créer notre bouton d'achat\n\n\nvar tableFooter = function tableFooter() {\n  var $productsFooter = document.querySelector('#products-footer');\n  $productsFooter.innerHTML += \"\\n     <tr class=\\\"container\\\">\\n          <td class=\\\"text-center\\\">\\n               <a href=\\\"../index.html\\\">\\n                    <button type=\\\"button\\\" onclick=\\\"clearCommand()\\\" id=\\\"clear-command\\\" class=\\\"btn col-md-6 col-12 mx-auto d-none d-sm-block\\\">Annuler la commande</button>\\n               </a>\\n          </td>\\n          <td class=\\\"text-center\\\">    \\n               <a href=\\\"order.html\\\">\\n                    <button type=\\\"button\\\" onclick=\\\"sendCommand()\\\" id=\\\"confirm-command\\\" class=\\\"btn col-md-6 col-12 mx-auto\\\">Passer la commande</button>\\n               </a>\\n          </td>\\n          <td class=\\\"text-center\\\">\\n               <p class=\\\"mt-3\\\">Sous total : <span id=\\\"sub-total\\\"></span>\\u20AC</p>\\n          </td>\\n     </tr>\\n     <tr class=\\\"container\\\">\\n          <td>\\n          </td>\\n          <td class=\\\"text-center\\\">\\n               <a href=\\\"../index.html\\\">\\n                    <button type=\\\"button\\\" onclick=\\\"clearCommand()\\\" id=\\\"clear-command\\\" class=\\\"btn col-md-6 col-12 mx-auto d-block d-sm-none\\\">Annuler la commande</button>\\n               </a>\\n          </td>\\n          <td>\\n          </td>\\n     </tr\";\n}; //Fonction pour notre panier vide\n\n\nvar tableEmpty = function tableEmpty() {\n  $productsTableBody.innerHTML += \"\\n     <tr id=\\\"title-table-empty\\\" class=\\\"col-12 mx-auto\\\">\\n          <td></td>\\n          <td class=\\\"text-center\\\">Votre panier est vide</td>\\n          <td></td>\\n     </tr>\\n     \";\n}; //Fonction pour implémenter chaque élement dans le tableau\n\n\nvar implementBasket = function implementBasket() {\n  var $productsCalcul = document.querySelector('#sub-total');\n  products.forEach(function (result) {\n    productsTableInfo = result;\n    totalPrice += productsTableInfo.price; //+= S'ajoute à lui même avec une autre valeur\n\n    productsTotalId.push(productsTableInfo._id); //On push chaque élément dans son tableau\n\n    productsTotalSub.push(productsTableInfo.price);\n    productsTotalQuant.push(productsTableInfo.quantity);\n    productsTotalName.push(productsTableInfo.name);\n  });\n  $productsCalcul.innerHTML = totalPrice; //On fait le total de notre tableau\n}; //Condition pour afficher et utiliser notre panier\n\n\nif (!storage) {\n  //On vérifie si storage existe\n  //Si non\n  storage = {\n    products: [] //Créé un tableau vide\n\n  };\n\n  if (storage.products.length <= 0 || localStorage.order) {\n    tableEmpty();\n  }\n} else {\n  //si oui\n  //On extrait notre json \n  storage = JSON.parse(storage);\n  products = storage.products; //Un tableau avec un index = une ligne/items \n  //Condition pour afficher notre panier \n\n  if (products.length >= 1 && (localStorage.order == undefined || localStorage.order)) {\n    tableRow();\n    tableFooter();\n    implementBasket();\n    products.forEach(function (result) {\n      //Boucle pour incrémenter le tableau\n      productsTableInfo = result;\n      productsTable();\n    });\n  } else if (products.length >= 1 && localStorage.order) {\n    //Si on a déjà une commande affiche tableEmpty\n    tableEmpty();\n  }\n} //Fonction pour stocker notre commande dans le localStorage\n\n\nvar sendCommand = function sendCommand() {\n  var order = window.localStorage.getItem(\"sendCommand\"); //Créer notre stockage de panier\n\n  var $productsCalcul = document.querySelector('#sub-total');\n\n  if (!order) {\n    order = {\n      products: []\n    };\n  } else {\n    order = JSON.parse(order); //On extrait notre json \n  }\n\n  order.products.unshift({\n    //Place notre commande en index 0\n    name: productsTotalName,\n    quantity: productsTotalQuant,\n    price: productsTotalSub,\n    id: productsTotalId\n  });\n\n  if (order.products.length > 1) {\n    //Supprime anciennes commande si nouvelle commande\n    var pos = 1;\n    var n = 1;\n    order.products.splice(pos, n);\n  }\n\n  window.localStorage.setItem(\"sendCommand\", JSON.stringify(order));\n  localStorage.removeItem(\"orderResult\"); //On nettoie notre localStorage pour passer une nouvelle commande\n\n  localStorage.removeItem(\"order\");\n  alert(\"Votre commande d'un total de \".concat($productsCalcul.textContent, \" \\u20AC est envoy\\xE9e. Vous allez \\xEAtre redirig\\xE9 pour finaliser votre commande.\"));\n}; //Fonction pour annuler la commande\n\n\nvar clearCommand = function clearCommand() {\n  localStorage.clear(); //Vide le local storage\n\n  alert(\"Commande annul\\xE9e. Vous allez \\xEAtre redirig\\xE9 vers la page d'accueil.\");\n};\n\n//# sourceURL=webpack://ottintimothe_5_27112020/./js/basket.js?");
/******/ })()
;