/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/*!*********************!*\
  !*** ./js/order.js ***!
  \*********************/
eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//Page order\n//On initialise nos variables\nvar $orderForm = document.querySelector('#order-form'); //Fonction pour notre commande vide\n\nvar commandEmpty = function commandEmpty() {\n  $orderForm.innerHTML += \"\\n     <p class=\\\"text-center\\\">Vous n'avez pas de commande en cours</p>\\n     \";\n}; //Fonction pour effacer notre bouton d'achat\n\n\nvar commandFooter = function commandFooter() {\n  $commandFooter = document.querySelector('#confirm-command');\n\n  if ($commandFooter) {\n    $commandFooter.classList.add(\"hide\");\n  }\n}; //Fonction pour notre formulaire de commande\n\n\nvar commandForm = function commandForm() {\n  $orderForm.innerHTML += \"\\n     <h3 class=\\\"caption-form text-center\\\">Merci de compl\\xE9ter les diff\\xE9rents champs pour finaliser votre commande</h3>\\n     <div class=\\\"row mt-3\\\">\\n         <div class=\\\"form-group col-md-6\\\">\\n           <label for=\\\"lastName\\\">Nom</label>\\n           <input required type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\">\\n         </div>\\n         <div class=\\\"form-group col-md-6\\\">\\n           <label for=\\\"firstName\\\">Pr\\xE9nom</label>\\n           <input required type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\">\\n         </div>\\n     </div>\\n     <div class=\\\"form-group\\\">\\n         <label for=\\\"adress\\\">Addresse</label>\\n         <input required type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"adress\\\">\\n     </div>\\n     <div class=\\\"form-group\\\">\\n         <label for=\\\"inputComplement\\\">Compl\\xE9ment</label>\\n         <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputComplement\\\" placeholder=\\\"Appartement, \\xE9tages...\\\">\\n     </div>\\n     <div class=\\\"row\\\">\\n         <div class=\\\"form-group col-md-5\\\">\\n             <label for=\\\"city\\\">Ville</label>\\n             <input required type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\">\\n         </div>\\n         <div class=\\\"form-group col-md-4\\\">\\n             <label for=\\\"inputState\\\">R\\xE9gion</label>\\n             <input required type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputState\\\">\\n         </div>\\n         <div class=\\\"form-group col-md-3\\\">\\n                 <label for=\\\"inputZip\\\">Code postal</label>\\n                 <input required type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\">\\n         </div>\\n     </div>\\n     <div class=\\\"form-row\\\">\\n         <div class=\\\"form-group col-12\\\">\\n           <label for=\\\"email\\\">Email</label>\\n           <input required type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\n         </div>\\n     </div>\\n     <button type=\\\"submit\\\" id=\\\"camera-buy\\\" class=\\\"btn col-sm-4 col-12 mx-auto mx-auto mt-4 mb-4\\\">Commander</button>\\n     \";\n}; //Envoie de notre formulaire au submit\n\n\n$orderForm.addEventListener('submit', function () {\n  //On écoute l'envoi\n  //On sélectionne nos ID présent dans notre form\n  var $lastName = document.querySelector('#lastName');\n  var $firstName = document.querySelector('#firstName');\n  var $adress = document.querySelector('#adress');\n  var $city = document.querySelector('#city');\n  var $email = document.querySelector('#email'); //Condition pour vérifier la validité des champs du form\n\n  if ($lastName.value.trim().length < 1 || $firstName.value.trim().length < 1 || $adress.value.trim().length < 1 || $city.value.trim().length < 1) {\n    //trim() vérifie si les champs ne sont pas des espaces vides\n    alert('Formulaire non valide ! Merci de renseigner correctement le formulaire (caractère incorrect dans l\\'un des champs)');\n    return;\n  } //Condition pour vérifier un email valide\n\n\n  var email = $email.value;\n  var regexEmail = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9-]{2,}[.][a-zA-Z]{2,3}$/; //Utilisation de regex \n\n  if (regexEmail.exec(email) == null) //exec() exécute la recherche d'une correspondance sur une chaîne de caractères donnée\n    {\n      alert(\"Merci de remplir un email correct\");\n      return false;\n    } //Création de la variable order\n\n\n  var order = {\n    contact: {\n      //Objet contact\n      firstName: $firstName.value.trim(),\n      //trim() supprime les espaces inutiles rajouté par l'utilisateur si il y en a\n      lastName: $lastName.value.trim(),\n      address: $adress.value.trim(),\n      city: $city.value.trim(),\n      email: $email.value.trim()\n    },\n    products: productsTotalId //Tableau des id des items\n\n  }; //Création de la requête POST\n\n  fetch(\"http://localhost:3000/api/cameras/order\", {\n    method: 'POST',\n    //Methode d'envoi\n    headers: new Headers({\n      \"Content-Type\": \"application/json\" //On 'précise' que l'objet envoyé sera au format JSON\n\n    }),\n    body: JSON.stringify(order) //On stringify l'objet envoyé\n\n  }).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(result_) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return result_.json();\n\n            case 2:\n              result = _context.sent;\n              //On attend le résultat de resul_.json() pour exécuter le reste\n              window.localStorage.setItem(\"orderResult\", JSON.stringify(result.orderId)); //On stocke orderId dans le localStorage pour l'utiliser après\n\n              window.localStorage.setItem(\"order\", JSON.stringify(order)); //On stock notre order dans localStorage pour l'utiliser après\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }())[\"catch\"](function (error) {\n    console.log(error);\n  });\n  alert(\"Commande prise en compte. Merci de votre achat !\");\n}); //Fonction quand la commande est passée\n\nvar orderSend = function orderSend() {\n  var $tableEmpty = document.querySelector('#table-empty');\n  var $orderSend = document.querySelector('#order-send');\n  $tableEmpty.classList.add(\"hide\"); //Ajout de la classe \"hide\" si la commande est bien passé\n\n  $orderForm.classList.add(\"hide\");\n  $orderSend.innerHTML += \"\\n     <p>Votre commande a bien \\xE9t\\xE9 enregistr\\xE9e.</p>\\n     <p>Votre num\\xE9ro de commande est le : \".concat(localStorage.orderResult, \".</p>\\n     <p>Merci de votre achat et \\xE0 bient\\xF4t</p>\\n     \");\n}; //Condition lorsque notre commande est passée\n\n\nif (localStorage.order) {\n  orderSend();\n  localStorage.removeItem(\"orinocoCamera\");\n  localStorage.removeItem(\"sendCommand\");\n} //Condition pour afficher et utiliser notre commande\n\n\nvar storageCommand = localStorage.getItem(\"sendCommand\"); //On récupère notre storageCommand en json\n\nif (!storageCommand) {\n  //On vérifie si storageCommand existe\n  //Si non\n  storageCommand = {\n    products: [] //Créé un tableau vide\n\n  };\n\n  if (storageCommand.products.length <= 0 && localStorage.order == undefined || localStorage.order <= 0) {\n    //Condition de l'affichage du contenu de notre page\n    commandEmpty();\n  }\n} else {\n  //si oui\n  //On extrait notre json \n  storageCommand = JSON.parse(storageCommand);\n  products = storageCommand.products; //Condition pour afficher notre panier\n\n  if (products.length >= 1) {\n    commandForm();\n    commandFooter();\n  }\n}\n\n//# sourceURL=webpack://ottintimothe_5_27112020/./js/order.js?");
/******/ })()
;